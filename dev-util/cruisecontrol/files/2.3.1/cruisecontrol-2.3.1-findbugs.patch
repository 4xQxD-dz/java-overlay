diff -urN cruisecontrol-2.3.1.orig/reporting/jsp/webcontent/css/cruisecontrol.css cruisecontrol-2.3.1/reporting/jsp/webcontent/css/cruisecontrol.css
--- cruisecontrol-2.3.1.orig/reporting/jsp/webcontent/css/cruisecontrol.css	2005-07-17 20:08:06.000000000 -0500
+++ cruisecontrol-2.3.1/reporting/jsp/webcontent/css/cruisecontrol.css	2005-11-11 13:44:33.000000000 -0600
@@ -57,3 +57,21 @@
 .macker-data { font-family:arial,helvetica,sans-serif; font-size:8pt; color:#000000; }
 .macker-data-error { font-family:arial,helvetica,sans-serif; font-size:8pt; color:#FF0000; }
 .macker-sectionheader { background-color:#000066; font-family:arial,helvetica,sans-serif; font-size:10pt; color:#FFFFFF; }
+
+.findbugs-evenrow { font-family:arial,helvetica,sans-serif; font-size:8pt; color:#000000; background-color:#FFFFCC; }
+.findbugs-oddrow { font-family:arial,helvetica,sans-serif; font-size:8pt; color:#000000; background-color:#CCCCCC; }
+.findbugs-fileheader { background-color:#FFFFFF; font-family:arial,helvetica,sans-serif; font-size:9pt; color:#000000; }
+.findbugs-sectionheader { background-color:#000066; font-family:arial,helvetica,sans-serif; font-size:9pt; color:#FFFFFF; }
+.findbugs-data { font-family:arial,helvetica,sans-serif; font-size:8pt; color:#000000; }
+.findbugs-priority-1 { background-color:#FF0000; } +.findbugs-priority-2 { background-color:#FF3300; }
+.findbugs-priority-3 { background-color:#FF9900; } +.findbugs-priority-4 { background-color:#FFFF00; }
+.findbugs-priority-5 { background-color:#0033FF; }
+.findbugs-tableheader { font-family:arial,helvetica,sans-serif; font-size:9pt; background: #b9b9fe; }
+.findbugs-tablerow0 { font-family:arial,helvetica,sans-serif; font-size:8pt; background: #EEEEEE; }
+.findbugs-tablerow1 { font-family:arial,helvetica,sans-serif; font-size:8pt; background: white; }
+.findbugs-tablerow0:hover, .findbugs-tablerow1:hover { background: #aaffaa; }
+.findbugs-detailheader { font-family:arial,helvetica,sans-serif; font-size:9pt; background: white; }
+.findbugs-detailrow0 { font-family:arial,helvetica,sans-serif; font-size:8pt; background: #EEEEEE; }
+.findbugs-detailrow1 { font-family:arial,helvetica,sans-serif; font-size:8pt; background: white; }
+.findbugs-warningheader { font-family:arial,helvetica,sans-serif; font-size:10pt; font-weight: bold; background: white; }
+
diff -urN cruisecontrol-2.3.1.orig/reporting/jsp/webcontent/xsl/buildresults.xsl cruisecontrol-2.3.1/reporting/jsp/webcontent/xsl/buildresults.xsl
--- cruisecontrol-2.3.1.orig/reporting/jsp/webcontent/xsl/buildresults.xsl	2005-07-17 20:08:06.000000000 -0500
+++ cruisecontrol-2.3.1/reporting/jsp/webcontent/xsl/buildresults.xsl	2005-11-11 13:45:41.000000000 -0600
@@ -41,6 +41,7 @@
   <xsl:import href="nant.xsl"/>
   <xsl:import href="checkstyle.xsl"/>
   <xsl:import href="pmd.xsl"/>
+  <xsl:import href="findbugs.xsl"/>
   <xsl:import href="macker.xsl"/>
   <xsl:import href="errors.xsl"/>
   <xsl:import href="compile.xsl"/>
@@ -58,6 +59,7 @@
     <p><xsl:apply-templates select="$cruisecontrol.list" mode="nant"/></p>
     <p><xsl:apply-templates select="$cruisecontrol.list" mode="checkstyle"/></p>
     <p><xsl:apply-templates select="$cruisecontrol.list" mode="pmd"/></p>
+    <p><xsl:apply-templates select="$cruisecontrol.list" mode="findbugs"/></p>
     <p><xsl:apply-templates select="$cruisecontrol.list" mode="macker"/></p>
     <p><xsl:apply-templates select="$cruisecontrol.list" mode="errors"/></p>
     <!--
diff -urN cruisecontrol-2.3.1.orig/reporting/jsp/webcontent/xsl/findbugs.xsl cruisecontrol-2.3.1/reporting/jsp/webcontent/xsl/findbugs.xsl
--- cruisecontrol-2.3.1.orig/reporting/jsp/webcontent/xsl/findbugs.xsl	1969-12-31 18:00:00.000000000 -0600
+++ cruisecontrol-2.3.1/reporting/jsp/webcontent/xsl/findbugs.xsl	2005-11-11 13:46:56.000000000 -0600
@@ -0,0 +1,259 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<!--
+  FindBugs - Find bugs in Java programs
+  Copyright (C) 2004,2005 University of Maryland
+  
+  This library is free software; you can redistribute it and/or
+  modify it under the terms of the GNU Lesser General Public
+  License as published by the Free Software Foundation; either
+  version 2.1 of the License, or (at your option) any later version.
+  
+  This library is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+  Lesser General Public License for more details.
+  
+  You should have received a copy of the GNU Lesser General Public
+  License along with this library; if not, write to the Free Software
+  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+-->
+
+<!--
+ - $Header$
+ - 
+ - XSL template for FindBugs results reporting inside of CruiseControl.
+ - 
+ - Copyright (C) 2005  Christopher G. Stach II <cgs@ldsys.net>
+ - 
+ - This program is free software; you can redistribute it and/or
+ - modify it under the terms of the GNU General Public License
+ - as published by the Free Software Foundation; either version 2
+ - of the License, or (at your option) any later version.
+ - 
+ - This program is distributed in the hope that it will be useful,
+ - but WITHOUT ANY WARRANTY; without even the implied warranty of
+ - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ - GNU General Public License for more details.
+ - 
+ - You should have received a copy of the GNU General Public License
+ - along with this program; if not, write to the Free Software
+ - Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+ - 
+ - ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ - This was modified from the original src/xsl/default.xsl distributed with
+ - FindBugs 0.8.8 to work with CruiseControl 2.2.1.
+ - 
+ - * Made it work.
+ - * Improved appearance so it would not look like crap on the build report
+ -   page.
+ - * Added [better] Class, Method, Field, and SourceLine support.
+ - * Use CSS for more stuff.
+ -->
+
+<!--
+  A simple XSLT stylesheet to transform FindBugs XML results
+  annotated with messages into HTML.
+
+  If you want to experiment with modifying this stylesheet,
+  or write your own, you need to generate XML output from FindBugs
+  using a special option which lets it know to include
+  human-readable messages in the XML.  Invoke the findbugs script
+  as follows:
+
+    findbugs -textui -xml:withMessages -project myProject.fb > results.xml
+
+  Then you can use your favorite XSLT implementation to transform
+  the XML output into HTML. (But don't use xsltproc. It generates well-nigh
+  unreadable output, and generates incorrect output for the
+  <script> element.)
+
+  Authors:
+  David Hovemeyer
+-->
+
+<xsl:stylesheet
+	version="1.0"
+	xmlns="http://www.w3.org/1999/xhtml"
+	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
+
+<xsl:output method="html" />
+
+<xsl:variable name="literalNbsp">&amp;nbsp;</xsl:variable>
+
+<xsl:variable name="bugTableHeader">
+	<tr class="findbugs-tableheader">
+		<th align="left">Code<xsl:value-of select="$literalNbsp" disable-output-escaping="yes"/></th>
+		<th align="left">Warning</th>
+	</tr>
+</xsl:variable>
+
+<xsl:template match="/" mode="findbugs">
+	<xsl:apply-templates select="cruisecontrol/BugCollection" mode="findbugs" />
+</xsl:template>
+
+<xsl:template match="BugCollection[*]" mode="findbugs">
+  <script type="text/javascript">
+	function toggleRow(elid) {
+		if (document.getElementById) {
+			element = document.getElementById(elid);
+			if (element) {
+				if (element.style.display == 'none') {
+					element.style.display = 'block';
+					//window.status = 'Toggle on!';
+				} else {
+					element.style.display = 'none';
+					//window.status = 'Toggle off!';
+				}
+			}
+		}
+	}
+  </script>
+  <table align="center" cellpadding="2" cellspacing="0" border="0" width="98%">
+    <tr>
+      <td class="findbugs-sectionheader">FindBugs violations (<xsl:value-of select="count(BugInstance)" />)</td>
+    </tr>
+    <tr>
+      <td class="findbugs-data">
+	<xsl:apply-templates select="Project" mode="findbugs" />
+
+	<xsl:call-template name="generateWarningTable">
+		<xsl:with-param name="warningSet" select="BugInstance[@category='CORRECTNESS']"/>
+		<xsl:with-param name="sectionTitle">Correctness Warnings</xsl:with-param>
+		<xsl:with-param name="sectionId">Warnings_CORRECTNESS</xsl:with-param>
+	</xsl:call-template>
+
+	<xsl:call-template name="generateWarningTable">
+		<xsl:with-param name="warningSet" select="BugInstance[@category='I18N']"/>
+		<xsl:with-param name="sectionTitle">Internationalization Warnings</xsl:with-param>
+		<xsl:with-param name="sectionId">Warnings_I18N</xsl:with-param>
+	</xsl:call-template>
+
+	<xsl:call-template name="generateWarningTable">
+		<xsl:with-param name="warningSet" select="BugInstance[@category='MT_CORRECTNESS']"/>
+		<xsl:with-param name="sectionTitle">Multithreaded Correctness Warnings</xsl:with-param>
+		<xsl:with-param name="sectionId">Warnings_MT_CORRECTNESS</xsl:with-param>
+	</xsl:call-template>
+
+	<xsl:call-template name="generateWarningTable">
+		<xsl:with-param name="warningSet" select="BugInstance[@category='MALICIOUS_CODE']"/>
+		<xsl:with-param name="sectionTitle">Malicious Code Vulnerability Warnings</xsl:with-param>
+		<xsl:with-param name="sectionId">Warnings_MALICIOUS_CODE</xsl:with-param>
+	</xsl:call-template>
+
+	<xsl:call-template name="generateWarningTable">
+		<xsl:with-param name="warningSet" select="BugInstance[@category='PERFORMANCE']"/>
+		<xsl:with-param name="sectionTitle">Performance Warnings</xsl:with-param>
+		<xsl:with-param name="sectionId">Warnings_PERFORMANCE</xsl:with-param>
+	</xsl:call-template>
+
+	<xsl:call-template name="generateWarningTable">
+		<xsl:with-param name="warningSet" select="BugInstance[@category='STYLE']"/>
+		<xsl:with-param name="sectionTitle">Style Warnings</xsl:with-param>
+		<xsl:with-param name="sectionId">Warnings_STYLE</xsl:with-param>
+	</xsl:call-template>
+
+	<hr width="98%" />
+	<br />
+
+	<dl>
+	<xsl:for-each select="BugPattern">
+		<xsl:sort select="@abbrev"/>
+		<xsl:sort select="ShortDescription"/>
+		<dt><span class="findbugs-detailheader"><a name="{@type}"><xsl:value-of select="@type"/>: <xsl:value-of select="ShortDescription"/></a></span></dt>
+		<dd><xsl:value-of select="Details" disable-output-escaping="yes"/></dd>
+	</xsl:for-each>
+	</dl>
+    </td>
+  </tr>
+</table>
+</xsl:template>
+
+<xsl:template match="Project" mode="findbugs">
+	<p>Project: <xsl:value-of select="@filename"/></p>
+	<p>FindBugs version: <xsl:value-of select="../@version"/></p>
+
+	<p>Code analyzed:</p>
+	<ul>
+		<xsl:for-each select="./Jar">
+			<li><xsl:value-of select="text()"/></li>
+		</xsl:for-each>
+	</ul>
+</xsl:template>
+
+<xsl:template match="BugInstance" mode="findbugs">
+	<xsl:variable name="warningId"><xsl:value-of select="generate-id()"/></xsl:variable>
+
+	<tr class="findbugs-tablerow{position() mod 2}" onclick="toggleRow('{$warningId}');">
+
+	<td>
+	<xsl:value-of select="@abbrev"/>
+	</td>
+
+	<td>
+	<xsl:value-of select="substring-after(LongMessage,':')"/>
+	</td>
+
+	</tr>
+
+	<!-- Add bug annotation elements: Class, Method, Field, SourceLine, Field -->
+	<tr class="findbugs-detailrow{position() mod 2}">
+		<td/>
+		<td>
+			<p id="{$warningId}" style="display: none;">
+				<a href="#{@type}">Bug type <xsl:value-of select="@type"/> (click for details)</a>
+				<xsl:for-each select="Class">
+					<xsl:sort select="@classname" />
+					<xsl:variable name="curClass"><xsl:value-of select="@classname" /></xsl:variable>
+					<br/><xsl:value-of select="Message/text()" />
+					<xsl:apply-templates select="../SourceLine[@classname=$curClass]" mode="findbugs">
+						<xsl:sort select="@start" />
+						<xsl:sort select="@end" />
+					</xsl:apply-templates>
+					<xsl:for-each select="../Method[@classname=$curClass]">
+						<br/><xsl:value-of select="Message/text()" />
+						<xsl:apply-templates select="SourceLine" mode="findbugs">
+							<xsl:sort select="@start" />
+							<xsl:sort select="@end" />
+						</xsl:apply-templates>
+					</xsl:for-each>
+					<xsl:for-each select="../Field[@classname=$curClass]">
+						<br/><xsl:value-of select="Message/text()" />
+						<xsl:apply-templates select="SourceLine" mode="findbugs">
+							<xsl:sort select="@start" />
+							<xsl:sort select="@end" />
+						</xsl:apply-templates>
+					</xsl:for-each>
+				</xsl:for-each>
+			</p>
+		</td>
+	</tr>
+</xsl:template>
+
+<xsl:template match="SourceLine" mode="findbugs">
+	line <xsl:value-of select="@start" /> to  <xsl:value-of select="@end" />
+</xsl:template>
+
+<xsl:template name="generateWarningTable">
+	<xsl:param name="warningSet"/>
+	<xsl:param name="sectionTitle"/>
+	<xsl:param name="sectionId"/>
+
+	<span class="findbugs-warningheader"><a name="{$sectionId}"><xsl:value-of select="$sectionTitle"/></a></span>
+	<table class="findbugs-warningtable" width="100%" cellspacing="0">
+		<xsl:copy-of select="$bugTableHeader"/>
+		<xsl:apply-templates select="$warningSet" mode="findbugs">
+			<xsl:sort select="@abbrev"/>
+			<xsl:sort select="Class/@classname"/>
+		</xsl:apply-templates>
+	</table>
+	<br />
+</xsl:template>
+
+<xsl:template match="/">
+	<xsl:apply-templates select="." mode="findbugs" />
+</xsl:template>
+
+</xsl:stylesheet>
+
+<!-- vim:set ts=4: -->
