--- src/jreversepro/reflect/JMethod.java.orig	2002-10-22 01:38:23.000000000 +0200
+++ src/jreversepro/reflect/JMethod.java	2005-07-22 08:45:00.000000000 +0200
@@ -478,12 +478,12 @@
         result.append("\n\t  // Max Locals " + maxLocals);
         result.append("  , Max Stack " +  maxStack);
         if (exceptionBlocks != null)  {
-            Enumeration enum = Collections.enumeration(exceptionBlocks);
-            if (enum.hasMoreElements()) {
+            Enumeration myEnum = Collections.enumeration(exceptionBlocks);
+            if (myEnum.hasMoreElements()) {
                 result.append("\n\n\t  /**");
                 result.append("\n\t\tFrom  To  Handler\tClass\n");
-                while (enum.hasMoreElements()) {
-                    JException exc = (JException) enum.nextElement();
+                while (myEnum.hasMoreElements()) {
+                    JException exc = (JException) myEnum.nextElement();
                     result.append(exc.toString());
                 }
                 result.append("\t  **/\n");
--- src/jreversepro/revengine/JDisAssembler.java.orig	2002-10-22 01:38:23.000000000 +0200
+++ src/jreversepro/revengine/JDisAssembler.java	2005-07-22 08:46:03.000000000 +0200
@@ -98,9 +98,9 @@
             curMethod.setSymbolTable(
                                 new JSymbolTable(curMethod, importInfo));
                 
-            Enumeration enum  = Collections.enumeration(byteIns);
-            while (enum.hasMoreElements()) {
-                JInstruction thisIns = (JInstruction) enum.nextElement();
+            Enumeration myEnum  = Collections.enumeration(byteIns);
+            while (myEnum.hasMoreElements()) {
+                JInstruction thisIns = (JInstruction) myEnum.nextElement();
                 if (thisIns.opcode == OPCODE_TABLESWITCH) {
                     JSwitchTable switches = new JSwitchTable(
                                     curMethod, thisIns, null);
--- src/jreversepro/runtime/JSymbolTable.java.orig	2002-10-22 01:38:23.000000000 +0200
+++ src/jreversepro/runtime/JSymbolTable.java	2005-07-22 08:48:10.000000000 +0200
@@ -244,9 +244,9 @@
      **/
     public List defineVariable(int endOfBranch) {
         List result = new Vector();
-        Enumeration enum = Collections.enumeration(symbols.values());
-        while (enum.hasMoreElements()) {
-            List list = (List) enum.nextElement();
+        Enumeration myEnum = Collections.enumeration(symbols.values());
+        while (myEnum.hasMoreElements()) {
+            List list = (List) myEnum.nextElement();
             for (int i = 0; i < list.size(); i++) {
                 JLocalEntry ent = (JLocalEntry) list.get(i);
                 if (!ent.isDeclared()
--- src/jreversepro/runtime/JRunTimeContext.java.orig	2002-10-22 01:38:23.000000000 +0200
+++ src/jreversepro/runtime/JRunTimeContext.java	2005-07-22 08:47:11.000000000 +0200
@@ -286,11 +286,11 @@
     public void writeVariableDeclarations(JBranchEntry ent,
                                         JSymbolTable symTable)
                                  throws RevEngineException {
-        Enumeration enum = Collections.enumeration(
+        Enumeration myEnum = Collections.enumeration(
                     symTable.defineVariable(
                             ent.getEndBlockPc()));
-        while (enum.hasMoreElements()) {
-            String varDec = enum.nextElement().toString();
+        while (myEnum.hasMoreElements()) {
+            String varDec = myEnum.nextElement().toString();
             //PP *** Need to identify offsets for next line ***
             method.addLineOfCode(new JLineOfCode(
                                     -1, -1, -1,
